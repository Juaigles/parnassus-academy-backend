// Demostraci√≥n completa del flujo de syllabus autom√°tico
import mongoose from 'mongoose';
import Course from './src/models/Course.js';
import Module from './src/models/Module.js';
import Lesson from './src/models/Lesson.js';
import { updateCourseSyllabus } from './src/services/courseService.js';

// Conectar a MongoDB
mongoose.connect('mongodb://localhost:27017/parnassus-academy-backend');

async function fullDemo() {
  try {
    console.log('üé¨ === DEMOSTRACI√ìN COMPLETA DEL SYLLABUS AUTOM√ÅTICO ===\n');
    
    // === PASO 1: Crear un nuevo curso ===
    console.log('üìö PASO 1: Creando nuevo curso...');
    const course = await Course.create({
      owner: new mongoose.Types.ObjectId(),
      title: 'Franc√©s A1 - Curso Completo',
      slug: 'frances-a1-completo',
      description: 'Aprende franc√©s desde cero con este curso interactivo',
      excerpt: 'Curso de franc√©s para principiantes',
      level: 'A1',
      visibility: 'public',
      status: 'draft',
      pricing: {
        type: 'one_time',
        amountCents: 5999,
        currency: 'EUR'
      },
      tags: ['franc√©s', 'principiante', 'a1']
    });
    
    console.log(`‚úÖ Curso creado: ${course.title} (ID: ${course._id})\n`);
    
    // === PASO 2: Crear m√≥dulos ===
    console.log('üìñ PASO 2: Creando m√≥dulos...');
    
    const module1 = await Module.create({
      course: course._id,
      index: 0,
      title: 'B√°sicos del Franc√©s',
      description: 'Fundamentos esenciales'
    });
    console.log(`   ‚úÖ M√≥dulo 1: ${module1.title}`);
    
    const module2 = await Module.create({
      course: course._id,
      index: 1,
      title: 'Gram√°tica Fundamental',
      description: 'Estructuras b√°sicas del franc√©s'
    });
    console.log(`   ‚úÖ M√≥dulo 2: ${module2.title}`);
    
    const module3 = await Module.create({
      course: course._id,
      index: 2,
      title: 'Situaciones Cotidianas',
      description: 'Franc√©s para el d√≠a a d√≠a'
    });
    console.log(`   ‚úÖ M√≥dulo 3: ${module3.title}\n`);
    
    // === PASO 3: Crear lecciones para m√≥dulo 1 ===
    console.log('üìù PASO 3: Creando lecciones para "B√°sicos del Franc√©s"...');
    
    await Lesson.create({
      course: course._id,
      module: module1._id,
      index: 0,
      title: 'Bonjour! - Saludos',
      durationSec: 1200,
      contentHtml: '<p>Aprende los saludos b√°sicos en franc√©s</p>'
    });
    console.log('   ‚úÖ Lecci√≥n: Bonjour! - Saludos');
    
    await Lesson.create({
      course: course._id,
      module: module1._id,
      index: 1,
      title: 'Les nombres - Los n√∫meros',
      durationSec: 1500,
      contentHtml: '<p>N√∫meros del 1 al 100 en franc√©s</p>'
    });
    console.log('   ‚úÖ Lecci√≥n: Les nombres - Los n√∫meros');
    
    await Lesson.create({
      course: course._id,
      module: module1._id,
      index: 2,
      title: 'Les couleurs - Los colores',
      durationSec: 900,
      contentHtml: '<p>Colores b√°sicos en franc√©s</p>'
    });
    console.log('   ‚úÖ Lecci√≥n: Les couleurs - Los colores\n');
    
    // === PASO 4: Crear lecciones para m√≥dulo 2 ===
    console.log('üìù PASO 4: Creando lecciones para "Gram√°tica Fundamental"...');
    
    await Lesson.create({
      course: course._id,
      module: module2._id,
      index: 0,
      title: 'Le/La/Les - Art√≠culos',
      durationSec: 1800,
      contentHtml: '<p>Art√≠culos definidos en franc√©s</p>'
    });
    console.log('   ‚úÖ Lecci√≥n: Le/La/Les - Art√≠culos');
    
    await Lesson.create({
      course: course._id,
      module: module2._id,
      index: 1,
      title: '√ätre et Avoir - Ser y Tener',
      durationSec: 2400,
      contentHtml: '<p>Verbos fundamentales √™tre y avoir</p>'
    });
    console.log('   ‚úÖ Lecci√≥n: √ätre et Avoir - Ser y Tener\n');
    
    // === PASO 5: Crear lecciones para m√≥dulo 3 ===
    console.log('üìù PASO 5: Creando lecciones para "Situaciones Cotidianas"...');
    
    await Lesson.create({
      course: course._id,
      module: module3._id,
      index: 0,
      title: 'Au restaurant - En el restaurante',
      durationSec: 2100,
      contentHtml: '<p>C√≥mo pedir comida en franc√©s</p>'
    });
    console.log('   ‚úÖ Lecci√≥n: Au restaurant - En el restaurante');
    
    await Lesson.create({
      course: course._id,
      module: module3._id,
      index: 1,
      title: 'Faire les courses - Hacer la compra',
      durationSec: 1800,
      contentHtml: '<p>Vocabulario para ir de compras</p>'
    });
    console.log('   ‚úÖ Lecci√≥n: Faire les courses - Hacer la compra\n');
    
    // === PASO 6: Verificar el syllabus autom√°tico ===
    console.log('üîç PASO 6: Verificando el syllabus autom√°tico...');
    
    // Esperar un momento para que todos los hooks se ejecuten
    await new Promise(resolve => setTimeout(resolve, 2000));
    
    const updatedCourse = await Course.findById(course._id);
    const syllabus = updatedCourse.marketing.syllabus;
    
    console.log('\nüìã === SYLLABUS GENERADO AUTOM√ÅTICAMENTE ===');
    console.log(JSON.stringify(syllabus, null, 2));
    
    // === PASO 7: Estad√≠sticas del curso ===
    console.log('\nüìä === ESTAD√çSTICAS DEL CURSO ===');
    const totalModules = syllabus.length;
    const totalLessons = syllabus.reduce((acc, module) => acc + module.lessons.length, 0);
    const totalDuration = syllabus.reduce((acc, module) => 
      acc + module.lessons.reduce((lessonAcc, lesson) => lessonAcc + lesson.durationSec, 0), 0
    );
    
    console.log(`üìñ Total de m√≥dulos: ${totalModules}`);
    console.log(`üìù Total de lecciones: ${totalLessons}`);
    console.log(`‚è±Ô∏è  Duraci√≥n total: ${Math.round(totalDuration / 60)} minutos`);
    console.log(`üéØ Duraci√≥n promedio por lecci√≥n: ${Math.round((totalDuration / totalLessons) / 60)} minutos\n`);
    
    // === PASO 8: Mostrar estructura detallada ===
    console.log('üèóÔ∏è  === ESTRUCTURA DETALLADA DEL CURSO ===');
    syllabus.forEach((module, moduleIndex) => {
      console.log(`\nüìñ M√ìDULO ${moduleIndex + 1}: ${module.title}`);
      console.log(`   (${module.lessons.length} lecciones)`);
      
      module.lessons.forEach((lesson, lessonIndex) => {
        const minutes = Math.round(lesson.durationSec / 60);
        console.log(`   üìù ${moduleIndex + 1}.${lessonIndex + 1} ${lesson.title} (${minutes}min)`);
      });
    });
    
    console.log('\nüéâ === DEMOSTRACI√ìN COMPLETA ===');
    console.log(`‚úÖ Curso creado exitosamente con ID: ${course._id}`);
    console.log('‚úÖ Syllabus generado autom√°ticamente');
    console.log('‚úÖ Todos los hooks funcionando correctamente');
    console.log('\nüîó URLs para probar en Postman:');
    console.log(`   GET http://localhost:3000/courses/${course._id}`);
    console.log(`   POST http://localhost:3000/courses/${course._id}/syllabus/regenerate`);
    console.log(`   PATCH http://localhost:3000/courses/${course._id}/marketing`);
    
    process.exit(0);
  } catch (error) {
    console.error('‚ùå Error en la demostraci√≥n:', error);
    process.exit(1);
  }
}

fullDemo();
